[{"C:\\Users\\orlan\\personal projects\\resty-2\\src\\index.js":"1","C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\App.js":"2","C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\Signup.js":"3","C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\PrivateRoute.js":"4","C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\dashboard.js":"5","C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\ForgotPassword.js":"6","C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\Login.js":"7","C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\Preferences.js":"8","C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\Home.js":"9","C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\UpdateProfile.js":"10","C:\\Users\\orlan\\personal projects\\resty-2\\src\\contexts\\AuthContext.js":"11","C:\\Users\\orlan\\personal projects\\resty-2\\src\\menus\\Navbar.js":"12","C:\\Users\\orlan\\personal projects\\resty-2\\src\\firebase.js":"13","C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\Dashboard.js":"14","C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\AddRestaurant.js":"15","C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\RestaurantCard.js":"16","C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\RequestRestaurant.js":"17","C:\\Users\\orlan\\personal projects\\resty-2\\src\\menus\\Footer.js":"18","C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\EditRestaurant.js":"19"},{"size":255,"mtime":1609238663652,"results":"20","hashOfConfig":"21"},{"size":1869,"mtime":1611764111573,"results":"22","hashOfConfig":"21"},{"size":4648,"mtime":1611134701706,"results":"23","hashOfConfig":"21"},{"size":429,"mtime":1610454950708,"results":"24","hashOfConfig":"21"},{"size":1566,"mtime":1610478821478,"results":"25","hashOfConfig":"21"},{"size":1714,"mtime":1609318313466,"results":"26","hashOfConfig":"21"},{"size":1798,"mtime":1609319684133,"results":"27","hashOfConfig":"21"},{"size":97,"mtime":1609320719962,"results":"28","hashOfConfig":"21"},{"size":1331,"mtime":1611138040042,"results":"29","hashOfConfig":"21"},{"size":2643,"mtime":1609319229950,"results":"30","hashOfConfig":"21"},{"size":1521,"mtime":1610456694831,"results":"31","hashOfConfig":"21"},{"size":1752,"mtime":1611752477133,"results":"32","hashOfConfig":"21"},{"size":1369,"mtime":1611763862603,"results":"33","hashOfConfig":"21"},{"size":1975,"mtime":1611764403617,"results":"34","hashOfConfig":"21"},{"size":9539,"mtime":1611763102238,"results":"35","hashOfConfig":"21"},{"size":236,"mtime":1611150726178,"results":"36","hashOfConfig":"21"},{"size":1570,"mtime":1611570373276,"results":"37","hashOfConfig":"21"},{"size":1218,"mtime":1611761667308,"results":"38","hashOfConfig":"21"},{"size":1750,"mtime":1611830743073,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"i89dhe",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\orlan\\personal projects\\resty-2\\src\\index.js",[],["86","87"],"C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\App.js",["88","89"],"import Signup from \"./Signup\";\nimport { AuthProvider } from \"../contexts/AuthContext\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"./Dashboard\";\nimport Login from \"./Login\";\nimport { Container } from \"react-bootstrap\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport ForgotPassword from \"./ForgotPassword\";\nimport UpdateProfile from \"./UpdateProfile\";\nimport NavBar from \"../menus/Navbar\";\nimport Footer from \"../menus/Footer\";\nimport Preferences from \"./Preferences\";\nimport Home from \"./Home\";\nimport AddRestaurant from \"./AddRestaurant\";\nimport RequestRestaurant from \"./RequestRestaurant\";\nimport EditRestaurant from \"./EditRestaurant\";\n\nfunction App() {\n  return (\n    <>\n      <AuthProvider>\n        <NavBar />\n\n        <div>\n          <Router>\n            <Switch>\n              <PrivateRoute exact path=\"/\" component={Home} />\n              <PrivateRoute\n                exact\n                path=\"/add-restaurants\"\n                component={AddRestaurant}\n              />\n              <PrivateRoute\n                path=\"/edit-restaurants\"\n                component={EditRestaurant}\n              />\n              <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n              <PrivateRoute\n                path=\"/request-restaurant\"\n                component={RequestRestaurant}\n              />\n              <PrivateRoute path=\"/prefernces\" component={Preferences} />\n              <Route path=\"/signup\" component={Signup} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/forgot-password\" component={ForgotPassword} />\n              <Route path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n          </Router>\n        </div>\n\n        {/*Think about having a footer */}\n      </AuthProvider>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\Signup.js",["90"],"import React, { useRef, useState } from \"react\";\r\nimport { Card, Button, Form, Alert, Modal } from \"react-bootstrap\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport firebase from \"../firebase\";\r\n\r\n//TODO: decide what to do (keep/delete/use otherwise) with the modal option\r\n\r\nexport default function Signup() {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n  const { signUp } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\");\r\n    }\r\n\r\n    setError(\"\");\r\n    setLoading(true);\r\n\r\n    const res = await signUp(emailRef.current.value, passwordRef.current.value);\r\n    console.log(res);\r\n    if (res === undefined) {\r\n      setError(\"Can't create the account. contact us if the problem persist\");\r\n      setLoading(false);\r\n    } else if (res === \"auth/email-already-in-use\") {\r\n      setError(\"Email is taken by another account\");\r\n      setLoading(false);\r\n    } else if (res === \"auth/invalid-email\") {\r\n      setError(\"Email is not valid\");\r\n      setLoading(false);\r\n    } else if (res === \"auth/weak-password\") {\r\n      setError(\r\n        \"Password is weak. We suggest using capital letters and numbers\"\r\n      );\r\n      setLoading(false);\r\n    } else {\r\n      const firestore = firebase.firestore();\r\n      const usersRef = firestore.collection(\"users\").doc(res);\r\n      const addingUserData = await usersRef.set({\r\n        email: emailRef.current.value,\r\n        role: 0,\r\n      });\r\n\r\n      setLoading(false);\r\n      showModal();\r\n    }\r\n  }\r\n\r\n  const showModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setIsOpen(false);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handlePref = (e) => {\r\n    console.log(\"yes\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n        </Card.Body>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group id=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control type=\"email\" ref={emailRef} required />\r\n          </Form.Group>\r\n          <Form.Group id=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" ref={passwordRef} required />\r\n          </Form.Group>\r\n          <Form.Group id=\"password-confirm\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n          </Form.Group>\r\n          <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n            Sign Up\r\n          </Button>\r\n        </Form>\r\n        <div className=\"w-100 text-center mt-2\">\r\n          Already have an account? <Link to=\"/login\">Log In</Link>\r\n        </div>\r\n        <Modal\r\n          show={isOpen}\r\n          onHide={hideModal}\r\n          animation={false}\r\n          backdrop=\"static\"\r\n        >\r\n          <Modal.Header>\r\n            <Modal.Title>Congrats! You are now part of our own</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p>\r\n              <b>You can now select your preferences</b>\r\n            </p>\r\n            <p>You can change them anytime through your profile</p>\r\n          </Modal.Body>\r\n          <Form>\r\n            <div key={`default-checkbox`} className=\"mb-3 ml-4\">\r\n              <Form.Check\r\n                inline\r\n                type={\"checkbox\"}\r\n                id={`vegan`}\r\n                label={`Vegan`}\r\n              ></Form.Check>\r\n              <Form.Check\r\n                inline\r\n                label=\"Vegeterian\"\r\n                type={\"checkbox\"}\r\n                id={`vegeterian`}\r\n              />\r\n              <Form.Check\r\n                inline\r\n                type={\"checkbox\"}\r\n                id={`Gluten-Free`}\r\n                label={`Gluten-Free`}\r\n              ></Form.Check>\r\n            </div>\r\n          </Form>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={hideModal}>\r\n              Skip\r\n            </Button>\r\n            <Button variant=\"secondary\" onClick={(e) => handlePref(e)}>\r\n              Confirm\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\PrivateRoute.js",[],"C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\dashboard.js",["91"],"C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\ForgotPassword.js",[],"C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\Login.js",[],"C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\Preferences.js",[],"C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\Home.js",["92","93","94","95","96","97"],"import React, { useState, useEffect } from \"react\";\r\nimport firestore, { fetchResData, fetchRole } from \"../firebase\";\r\nimport RestaurantCard from \"./RestaurantCard\";\r\n\r\nfunction Home() {\r\n  const [names, setNames] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n\r\n  const fetchData = async () => {};\r\n\r\n  useEffect(() => {\r\n    fetchResData().then((d) => {\r\n      setData(d);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {data\r\n        ? Object.values(data).map((r, i) => {\r\n            return (\r\n              <div key={i}>\r\n                {/* That's how to get the values other than lan/lat !!!!!!! */}\r\n                <div>{r.name}</div>\r\n                <div>{r.vegeterian ? \"is veg\" : \"not veg\"}</div>\r\n\r\n                {Object.values(r).map((a, i) => {\r\n                  return (\r\n                    <div key={i}>\r\n                      <div>{a.lng}</div>\r\n                      <div>{a.lat}</div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })\r\n        : \"\"}\r\n      {/*{navigator.geolocation.getCurrentPosition(function (position) {\r\n        console.log(\"Latitude is: \", position.coords.latitude);\r\n        console.log(\"Longitude is: \", position.coords.longitude);\r\n      })}*/}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\UpdateProfile.js",[],"C:\\Users\\orlan\\personal projects\\resty-2\\src\\contexts\\AuthContext.js",[],"C:\\Users\\orlan\\personal projects\\resty-2\\src\\menus\\Navbar.js",["98","99"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport userpic from \"../components/userpic.png\";\r\nimport RequestRestaurant from \"../components/RequestRestaurant\";\r\nexport default function NavBar() {\r\n  const { currentUser } = useAuth();\r\n  const { logout } = useAuth();\r\n  const history = useHistory();\r\n  const [error, setError] = useState();\r\n  async function logoutUser() {\r\n    try {\r\n      await logout();\r\n      history.push(\"/\");\r\n    } catch {\r\n      setError(\"Failed to log out\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"primary\" variant=\"dark\" style={{ minWidth: 700 }}>\r\n        <Navbar.Brand href=\"/\">Resty</Navbar.Brand>\r\n        <Nav className=\"container-fluid\">\r\n          {currentUser && <Nav.Link href=\"/\">Home</Nav.Link>}\r\n\r\n          {currentUser && (\r\n            <Nav.Link className=\"ml-auto\" onClick={logoutUser} href=\"/\">\r\n              Logout\r\n            </Nav.Link>\r\n          )}\r\n          {currentUser && (\r\n            <Nav.Link className=\"ml-right\" href=\"/dashboard\">\r\n              <img\r\n                alt=\"icon\"\r\n                src={userpic}\r\n                style={{ height: 20, float: \"right\", marginLeft: 10 }}\r\n              />\r\n            </Nav.Link>\r\n          )}\r\n          {!currentUser && (\r\n            <Nav.Link className=\"ml-auto\" href=\"/signup\">\r\n              Register\r\n            </Nav.Link>\r\n          )}\r\n          {!currentUser && (\r\n            <Nav.Link className=\"ml-right\" href=\"/login\">\r\n              Login\r\n            </Nav.Link>\r\n          )}\r\n        </Nav>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\orlan\\personal projects\\resty-2\\src\\firebase.js",[],"C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\Dashboard.js",["100","101"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Alert, Spinner } from \"react-bootstrap\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase, { fetchRole } from \"../firebase\";\r\n\r\nexport default function Dashboard() {\r\n  const [error] = useState(\"\");\r\n  const { currentUser } = useAuth();\r\n  const [role, setRole] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      fetchRole(currentUser).then((r) => {\r\n        setRole(r);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {role ? (\r\n        <Card>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Profile</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <strong>Email: {currentUser.email}</strong>\r\n            {role > 0 && (\r\n              <Link\r\n                to=\"/add-restaurants\"\r\n                className=\"btn btn-primary w-100 mt-3\"\r\n              >\r\n                Add restaurants\r\n              </Link>\r\n            )}\r\n            {role > 0 && (\r\n              <Link\r\n                to=\"/edit-restaurants\"\r\n                className=\"btn btn-primary w-100 mt-3\"\r\n              >\r\n                Edit restaurants\r\n              </Link>\r\n            )}\r\n            <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">\r\n              Update Profile\r\n            </Link>\r\n            <Link to=\"/prefernces\" className=\"btn btn-primary w-100 mt-3\">\r\n              Update Preferences\r\n            </Link>\r\n          </Card.Body>\r\n        </Card>\r\n      ) : (\r\n        <Spinner\r\n          animation=\"border\"\r\n          role=\"status\"\r\n          style={{\r\n            justifyContent: \"center\",\r\n            marginTop: \"200px\",\r\n            marginLeft: \"200px\",\r\n          }}\r\n        >\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      )}\r\n      <div className=\"w-100 text-center mt-2\"></div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\AddRestaurant.js",["102","103","104","105","106","107","108","109","110","111","112","113"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Card, Alert, Form, Button } from \"react-bootstrap\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport * as firebase from \"../firebase\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nexport default function AddRestaurant() {\r\n  const [error, setError] = useState(null);\r\n  const { currentUser } = useAuth();\r\n  const [role, setRole] = useState(0);\r\n  const [address, setAddress] = useState(\"\");\r\n  const [dishes, setDishes] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [picDish, setPicDish] = useState(null);\r\n\r\n  //store all the other restarutants' coordinates to validate in the submit part\r\n  const [dataCoords, setDataCoords] = useState(null);\r\n\r\n  var picArr = [];\r\n\r\n  const history = useHistory();\r\n\r\n  const nameRef = useRef();\r\n\r\n  const veganRef = useRef();\r\n  const vegeterianRef = useRef();\r\n  const glutenFreeRef = useRef();\r\n\r\n  //food types:\r\n  const chineseRef = useRef();\r\n  const italianRef = useRef();\r\n\r\n  const [coordinates, setCoordinates] = useState({ lat: null, lng: null });\r\n  const handleSelect = async (value) => {\r\n    const results = await geocodeByAddress(value);\r\n    const latlng = await getLatLng(results[0]);\r\n    setAddress(value);\r\n    setCoordinates(latlng);\r\n  };\r\n\r\n  const styles = {\r\n    largeIcon: {\r\n      padding: 30,\r\n    },\r\n  };\r\n\r\n  //when submiting, validate that no restarurant with the same coordinates exist in the database\r\n  function validateCoordinates(coords) {\r\n    if (dataCoords === null) {\r\n      setError(\"cannot load coordinates from database\");\r\n      return false;\r\n    } else {\r\n      console.log(dataCoords);\r\n      console.log(dataCoords.length);\r\n      for (var i = 0; i < dataCoords.length; i++) {\r\n        if (\r\n          coords.lat === dataCoords[i].lat &&\r\n          coords.lng === dataCoords[i].lng\r\n        ) {\r\n          setError(\r\n            \"There is already a restaurant with the same coordinates in the database\"\r\n          );\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  async function handleSubmitRes(e) {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    if (validateCoordinates(coordinates)) {\r\n      //TODO: Complete every reference and put it in database\r\n\r\n      const resRef = firebase.firestore.collection(\"restaurants\");\r\n      await resRef\r\n        .add({\r\n          name: nameRef.current.value,\r\n          coordinates: coordinates,\r\n          vegan: veganRef.current.checked,\r\n          vegeterian: vegeterianRef.current.checked,\r\n          glutenFree: glutenFreeRef.current.checked,\r\n        })\r\n        .catch((error) => setError(error))\r\n        .then(setLoading(false));\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      firebase.fetchRole(currentUser).then((r) => {\r\n        setRole(r);\r\n      });\r\n      firebase.fetchAllCoordinates().then((d) => setDataCoords(d));\r\n    }\r\n  }, []);\r\n\r\n  function uploadPicturesToStorage() {}\r\n\r\n  //function to add 'upload pictures' in the 'adding dish' part\r\n  function addPicButtons(n) {\r\n    return [...Array(n)].map((e, i) => (\r\n      <span key={i} id={i} style={{ display: \"table-cell\" }}>\r\n        <input\r\n          accept=\"image/*\"\r\n          style={{ display: \"none\" }}\r\n          id=\"icon-button-file\"\r\n          type=\"file\"\r\n          onChange={(e) => picArr.push(e.target.files[0])}\r\n        />\r\n        <label htmlFor=\"icon-button-file\">\r\n          <IconButton\r\n            style={styles.largeIcon}\r\n            color=\"primary\"\r\n            aria-label=\"upload picture\"\r\n            component=\"span\"\r\n          >\r\n            <PhotoCamera />\r\n          </IconButton>\r\n        </label>\r\n      </span>\r\n    ));\r\n  }\r\n\r\n  //function to add the 'adding dish' part in the form\r\n  function addDish() {\r\n    return (\r\n      <Card id=\"1\">\r\n        <Card.Header>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Control type=\"name\" placeholder=\"Name of dish\" />\r\n            </Form.Group>\r\n          </Form>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Control\r\n                style={{ height: \"100px\" }}\r\n                type=\"description\"\r\n                placeholder=\"Description\"\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n          <div>\r\n            Category:\r\n            <Form.Check\r\n              style={{ marginLeft: \"10px\" }}\r\n              inline\r\n              type={\"checkbox\"}\r\n              id={`first`}\r\n              label={`First`}\r\n            ></Form.Check>\r\n            <Form.Check\r\n              inline\r\n              type={\"checkbox\"}\r\n              id={`main`}\r\n              label={`Main`}\r\n            ></Form.Check>\r\n            <Form.Check\r\n              inline\r\n              type={\"checkbox\"}\r\n              id={`dessert`}\r\n              label={`Dessert`}\r\n            ></Form.Check>\r\n          </div>\r\n          <div\r\n            className=\"camera-buttons\"\r\n            style={{\r\n              display: \"table\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            {addPicButtons(5)}\r\n          </div>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Button\r\n            onClick={() => console.log(picArr)}\r\n            style={{ float: \"right\" }}\r\n          >\r\n            Submit Dish\r\n          </Button>\r\n        </Card.Footer>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ marginTop: \"10px\" }}>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Add Restarurant</h2>\r\n\r\n          {error ? <Alert variant=\"danger\">{error}</Alert> : \"\"}\r\n\r\n          <Form onSubmit={handleSubmitRes}>\r\n            <Form.Group id=\"name\">\r\n              <Form.Label>Name of the restaurant</Form.Label>\r\n              <Form.Control type=\"name\" ref={nameRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"address\">\r\n              <Form.Label>Find the place through our google search</Form.Label>\r\n              <div>\r\n                <PlacesAutocomplete\r\n                  value={address}\r\n                  onChange={setAddress}\r\n                  onSelect={handleSelect}\r\n                >\r\n                  {({\r\n                    getInputProps,\r\n                    suggestions,\r\n                    getSuggestionItemProps,\r\n                    loading,\r\n                  }) => (\r\n                    <div>\r\n                      <input\r\n                        style={{ width: \"100%\" }}\r\n                        {...getInputProps({ placeholder: \"Type address\" })}\r\n                      />\r\n                      <div>\r\n                        {loading ? <div>...loading </div> : null}\r\n                        {suggestions.map((suggestion, index) => {\r\n                          const style = {\r\n                            backgroundColor: suggestion.active\r\n                              ? \"#41b6e6\"\r\n                              : \"#fff\",\r\n                          };\r\n                          return (\r\n                            <div\r\n                              key={index}\r\n                              {...getSuggestionItemProps(suggestion, {\r\n                                style,\r\n                              })}\r\n                            >\r\n                              {suggestion.description}\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </PlacesAutocomplete>\r\n              </div>\r\n            </Form.Group>\r\n            <div key={`default-checkbox1`} className=\"mb-3 ml-4\">\r\n              <p>Is it:</p>\r\n              <Form.Check\r\n                inline\r\n                type={\"checkbox\"}\r\n                id={`vegan`}\r\n                label={`Vegan`}\r\n                ref={veganRef}\r\n              ></Form.Check>\r\n              <Form.Check\r\n                inline\r\n                label=\"Vegeterian\"\r\n                type={\"checkbox\"}\r\n                id={`vegeterian`}\r\n                ref={vegeterianRef}\r\n              />\r\n              <Form.Check\r\n                inline\r\n                type={\"checkbox\"}\r\n                id={`Gluten-Free`}\r\n                label={`Gluten-Free`}\r\n                ref={glutenFreeRef}\r\n              ></Form.Check>\r\n            </div>\r\n            <div key={`default-checkbox2`} className=\"mb-3 ml-4\">\r\n              <p>Food type:</p>\r\n              <Form.Check\r\n                inline\r\n                type={\"checkbox\"}\r\n                id={`italian`}\r\n                label={`Italian`}\r\n              ></Form.Check>\r\n              <Form.Check\r\n                inline\r\n                label=\"Chinese\"\r\n                type={\"checkbox\"}\r\n                id={`chinese`}\r\n              />\r\n              <Form.Check\r\n                inline\r\n                type={\"checkbox\"}\r\n                id={`thai`}\r\n                label={`Thai`}\r\n              ></Form.Check>\r\n            </div>\r\n\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Add Restaurant\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      <div className=\"w-100 text-center mt-2\"></div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\RestaurantCard.js",["114","115","116","117","118","119","120"],"import React, { useEffect, useState } from \"react\";\r\nimport { Card, Container, Button, Form } from \"react-bootstrap\";\r\n\r\nconst RestaurantCard = () => {\r\n  const data = {};\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default RestaurantCard;\r\n","C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\RequestRestaurant.js",[],"C:\\Users\\orlan\\personal projects\\resty-2\\src\\menus\\Footer.js",[],"C:\\Users\\orlan\\personal projects\\resty-2\\src\\components\\EditRestaurant.js",["121","122","123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":6,"column":10,"nodeType":"130","messageId":"131","endLine":6,"endColumn":19},{"ruleId":"128","severity":1,"message":"132","line":11,"column":8,"nodeType":"130","messageId":"131","endLine":11,"endColumn":14},{"ruleId":"128","severity":1,"message":"133","line":48,"column":13,"nodeType":"130","messageId":"131","endLine":48,"endColumn":27},{"ruleId":"128","severity":1,"message":"134","line":4,"column":16,"nodeType":"130","messageId":"131","endLine":4,"endColumn":26},{"ruleId":"128","severity":1,"message":"135","line":2,"column":8,"nodeType":"130","messageId":"131","endLine":2,"endColumn":17},{"ruleId":"128","severity":1,"message":"136","line":2,"column":35,"nodeType":"130","messageId":"131","endLine":2,"endColumn":44},{"ruleId":"128","severity":1,"message":"137","line":3,"column":8,"nodeType":"130","messageId":"131","endLine":3,"endColumn":22},{"ruleId":"128","severity":1,"message":"138","line":6,"column":10,"nodeType":"130","messageId":"131","endLine":6,"endColumn":15},{"ruleId":"128","severity":1,"message":"139","line":6,"column":17,"nodeType":"130","messageId":"131","endLine":6,"endColumn":25},{"ruleId":"128","severity":1,"message":"140","line":9,"column":9,"nodeType":"130","messageId":"131","endLine":9,"endColumn":18},{"ruleId":"128","severity":1,"message":"141","line":7,"column":8,"nodeType":"130","messageId":"131","endLine":7,"endColumn":25},{"ruleId":"128","severity":1,"message":"142","line":12,"column":10,"nodeType":"130","messageId":"131","endLine":12,"endColumn":15},{"ruleId":"128","severity":1,"message":"143","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":16},{"ruleId":"144","severity":1,"message":"145","line":18,"column":6,"nodeType":"146","endLine":18,"endColumn":8,"suggestions":"147"},{"ruleId":"128","severity":1,"message":"148","line":4,"column":10,"nodeType":"130","messageId":"131","endLine":4,"endColumn":14},{"ruleId":"128","severity":1,"message":"149","line":16,"column":10,"nodeType":"130","messageId":"131","endLine":16,"endColumn":14},{"ruleId":"128","severity":1,"message":"150","line":18,"column":10,"nodeType":"130","messageId":"131","endLine":18,"endColumn":16},{"ruleId":"128","severity":1,"message":"151","line":18,"column":18,"nodeType":"130","messageId":"131","endLine":18,"endColumn":27},{"ruleId":"128","severity":1,"message":"152","line":20,"column":10,"nodeType":"130","messageId":"131","endLine":20,"endColumn":17},{"ruleId":"128","severity":1,"message":"153","line":20,"column":19,"nodeType":"130","messageId":"131","endLine":20,"endColumn":29},{"ruleId":"128","severity":1,"message":"154","line":27,"column":9,"nodeType":"130","messageId":"131","endLine":27,"endColumn":16},{"ruleId":"128","severity":1,"message":"155","line":36,"column":9,"nodeType":"130","messageId":"131","endLine":36,"endColumn":19},{"ruleId":"128","severity":1,"message":"156","line":37,"column":9,"nodeType":"130","messageId":"131","endLine":37,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":105,"column":6,"nodeType":"146","endLine":105,"endColumn":8,"suggestions":"157"},{"ruleId":"128","severity":1,"message":"158","line":107,"column":12,"nodeType":"130","messageId":"131","endLine":107,"endColumn":35},{"ruleId":"128","severity":1,"message":"159","line":135,"column":12,"nodeType":"130","messageId":"131","endLine":135,"endColumn":19},{"ruleId":"128","severity":1,"message":"160","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":26},{"ruleId":"128","severity":1,"message":"161","line":1,"column":28,"nodeType":"130","messageId":"131","endLine":1,"endColumn":36},{"ruleId":"128","severity":1,"message":"162","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":2,"column":16,"nodeType":"130","messageId":"131","endLine":2,"endColumn":25},{"ruleId":"128","severity":1,"message":"163","line":2,"column":27,"nodeType":"130","messageId":"131","endLine":2,"endColumn":33},{"ruleId":"128","severity":1,"message":"164","line":2,"column":35,"nodeType":"130","messageId":"131","endLine":2,"endColumn":39},{"ruleId":"128","severity":1,"message":"165","line":5,"column":9,"nodeType":"130","messageId":"131","endLine":5,"endColumn":13},{"ruleId":"128","severity":1,"message":"163","line":3,"column":25,"nodeType":"130","messageId":"131","endLine":3,"endColumn":31},{"ruleId":"128","severity":1,"message":"166","line":7,"column":10,"nodeType":"130","messageId":"131","endLine":7,"endColumn":17},{"ruleId":"128","severity":1,"message":"167","line":7,"column":19,"nodeType":"130","messageId":"131","endLine":7,"endColumn":29},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","'addingUserData' is assigned a value but never used.","'useHistory' is defined but never used.","'firestore' is defined but never used.","'fetchRole' is defined but never used.","'RestaurantCard' is defined but never used.","'names' is assigned a value but never used.","'setNames' is assigned a value but never used.","'fetchData' is assigned a value but never used.","'RequestRestaurant' is defined but never used.","'error' is assigned a value but never used.","'firebase' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.","ArrayExpression",["170"],"'Link' is defined but never used.","'role' is assigned a value but never used.","'dishes' is assigned a value but never used.","'setDishes' is assigned a value but never used.","'picDish' is assigned a value but never used.","'setPicDish' is assigned a value but never used.","'history' is assigned a value but never used.","'chineseRef' is assigned a value but never used.","'italianRef' is assigned a value but never used.",["171"],"'uploadPicturesToStorage' is defined but never used.","'addDish' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'data' is assigned a value but never used.","'resData' is assigned a value but never used.","'setResData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"172","fix":"174"},"Update the dependencies array to be: [currentUser]",{"range":"175","text":"176"},{"range":"177","text":"176"},[546,548],"[currentUser]",[3209,3211]]